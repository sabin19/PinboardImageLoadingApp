apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":netwoking")
    implementation project(":model")
    implementation project(":test-shared")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat"
    implementation "androidx.core:core-ktx:$rootProject.ktx"
    api("androidx.work:work-runtime-ktx:$workVersion") {
        // WorkManager uses its own version of listenablefuture extracted from guava.
        // This is required to avoid conflicts.
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    testImplementation "androidx.arch.core:core-testing:$rootProject.archCoreTestingVersion"

    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.extJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutine"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$rootProject.mockitoKotlinVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerAndroidVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleVersion"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutine"
    implementation "com.google.code.gson:gson:$gson"
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.paging"



}
